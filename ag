#!/bin/zsh

# Set default values for options
GITHUB_USERNAME=$(git config --get autogit.username)
REPO_NAME=""
BRANCH_NAME="main"
FOLDER_NAME=""

# Function to display help menu and exit
help_menu() {
  echo "
Welcome to autogit. This script automatically inits and pushes a GitHub repo. All options are optional. If you just run 'ag' by itself, it will init and push a git repo with the current folder name, and the default branch name, using your set GitHub username

  -f <folder_name>: Create a new folder with the specified name and initialize the Git repository inside it.
  -u <github_username>: Set the GitHub username for the remote repository.
  -r <repo_name>: Set the name of the Git repository.
  -b <branch_name>: Set the initial branch name (default: 'main').
  -h: Displays this help menu
  "
}

# Parse options
while getopts ":f:u:r:b:h" opt; do
  case $opt in
    h) help_menu; exit 1;;
    f) FOLDER_NAME="$OPTARG";;
    u) GITHUB_USERNAME="$OPTARG"; git config --global autogit.username "$GITHUB_USERNAME";;
    r) REPO_NAME="$OPTARG";;
    b) BRANCH_NAME="$OPTARG";;
    \?) echo "Invalid option: -$OPTARG"; exit 1;;
  esac
done
shift $((OPTIND-1))

# Create a new folder if specified
if [ -n "$FOLDER_NAME" ]; then
  mkdir -p "$FOLDER_NAME"
  cd "$FOLDER_NAME"
fi

# Set default repo name to current folder name if not specified
if [ -z "$REPO_NAME" ]; then
  REPO_NAME="${PWD##*/}"
fi


if [ -d ".git" ]; then
  echo "Error: Current directory is already a Git repository."
  exit 1
fi

# Create the repository
echo "# $REPO_NAME" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M "$BRANCH_NAME"
git remote add origin "git@github.com:$GITHUB_USERNAME/$REPO_NAME.git"
git push -u origin "$BRANCH_NAME"
